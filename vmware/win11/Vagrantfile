Vagrant.configure("2") do |config|
  config.vm.box = "gusztavvargadr/windows-11"
  config.vm.hostname = "win11-vm"


  # PowerShell provisioning: Download and run ConfigureRemotingForAnsible
  config.vm.provision "shell", privileged: true, inline: <<-SHELL
    $url = "https://raw.githubusercontent.com/ansible/ansible-documentation/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
    $file = "C:\\Windows\\Temp\\ConfigureRemotingForAnsible.ps1"
    Invoke-WebRequest -Uri $url -OutFile $file
    powershell.exe -ExecutionPolicy Bypass -File $file
  SHELL



    # PowerShell provisioning: Download and run ConfigureRemotingForAnsible
   config.vm.provision "shell", privileged: true, inline: <<-PS
    $iface = "Ethernet0"
    $ip = "192.168.150.15"
    $gateway = "192.168.150.2"
    $dns = "8.8.8.8"


    if (Get-NetAdapter -Name $iface -ErrorAction SilentlyContinue) {
      Set-NetIPInterface -InterfaceAlias $iface -Dhcp Disabled
      Get-NetIPAddress -InterfaceAlias $iface -AddressFamily IPv4 | Remove-NetIPAddress -Confirm:$false
      New-NetIPAddress -InterfaceAlias $iface -IPAddress $ip -PrefixLength 24 -DefaultGateway $gateway
      Set-DnsClientServerAddress -InterfaceAlias $iface -ServerAddresses $dns
    } else {
      Write-Error "Interface $iface not found."
    }

  PS





  config.vm.provider "vmware_desktop" do |v|
    v.gui = true
    v.linked_clone = false

    v.vmx["memsize"] = "16384"
    v.vmx["numvcpus"] = "4"
    v.vmx["vhv.enable"] = "TRUE"
    v.vmx["hypervisor.cpuid.v0"] = "FALSE"
    v.vmx["cpuid.1.ecx"] = "----:----:----:----:----:----:--H-:----"
  end
end
